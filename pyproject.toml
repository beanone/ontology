[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ontology"
version = "0.1.0"
description = "Ontology project with memory server functionality"
requires-python = ">=3.10"
authors = [
    { name = "Your Name", email = "your.email@example.com" }
]
dependencies = [
    "beanone-agentical",
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.22.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.24.1",
    "aiofiles>=23.1.0",
]
dev = [
    "ruff>=0.1.0",
    "mypy>=1.5.0",
]

[tool.hatch.build.targets.wheel]
packages = ["ontology"]

[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
line-length = 88
target-version = "py310"

[tool.ruff.lint]
# Enable various rules including line length checking
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "Q",   # flake8-quotes
    "UP",  # pyupgrade
    "PL",  # pylint
    "RUF", # Ruff-specific rules
]

# Allow autofix behavior for specific rules
fixable = ["ALL"]
unfixable = []

# Rules to ignore
ignore = []

[tool.ruff.format]
# Use double quotes for strings.
quote-style = "double"
# Indent with spaces, rather than tabs.
indent-style = "space"
# Format docstrings according to Google style.
docstring-code-format = true
# Enable reformatting of code snippets in docstrings.
docstring-code-line-length = 88

[tool.mypy]
python_version = "3.10"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
strict_optional = true